{"version":3,"file":"static/js/204.4d0c38e2.chunk.js","mappings":"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","sources":["components/CardBook/CardBook.styled.js","components/CardBook/CardBook.jsx","components/BooksList/BookList.styled.js","components/BooksList/BooksList.jsx","components/RecommendedBooks/RecommendedBooks.styled.js","components/RecommendedBooks/RecommendedBooks.jsx","components/Dashboard/Dashboard.styled.js","components/Dashboard/Dashboard.jsx","schemas/FiltersSchema.js","components/Filters/Filters.styled.js","components/Filters/Filters.jsx","components/MyLibrary/MyLibrary.styled.js","components/MyLibrary/MyLibrary.jsx","components/RecommendedPageDashboard/RecommendedPageDashboard.jsx","redux/books/selectors.js","pages/RecommendedPage/RecommendedPage.styled.js","pages/RecommendedPage/RecommendedPage.js"],"sourcesContent":["import { styled } from \"styled-components\";\n\nexport const BooksItem = styled.li`\nwidth:calc(50%-10px);\n@media only screen and (min-width: 768px) {\n     width: calc(25% - 25px);\n    \n}\n\n@media only screen and (min-width: 1440px) {\nwidth: calc(20% - 20px);\n\n}\n`\nexport const StyledImg = styled.img`\n margin-bottom:8px;\n width:100%;\n height:208px;\n border-radius: 8px;\n@media only screen and (max-width: 375px) {\n     width:137px;\n}\n\n@media only screen and (min-width: 768px) {\n    \n}\n\n`\nexport const TitleBook = styled.h3`\nmargin-bottom:2px;\nwidth:103px;\nheight:18px;\noverflow:hidden;\nfont-weight: 700;\nfont-size: 14px;\nline-height: 1.28571;\nletter-spacing: -0.02em;\ncolor: ${({theme})=>theme.colors.mainTxtColor};\n`\nexport const AuthorBook = styled.p`\nfont-weight: 500;\nfont-size: 10px;\nline-height: 1.2;\nletter-spacing: -0.02em;\ncolor:${({theme})=>theme.colors.darkTxtColor};\n`","import { AuthorBook, BooksItem, StyledImg, TitleBook } from \"./CardBook.styled\"\n\nexport const CardBook = ({ book}) => {\n    const { imageUrl, title, author} = book;\n    return (\n        <BooksItem>\n            <StyledImg src={imageUrl} alt={title}  />\n            <TitleBook>{title}</TitleBook>\n            <AuthorBook>{author}</AuthorBook>\n        </BooksItem>\n    )\n}","import { styled } from \"styled-components\";\n\nexport const WrapperListBooks = styled.div`\n\n/* width:295px; */\nwidth:100%;\n height:248px; \n overflow:hidden; \n @media only screen and (min-width: 768px) {\n    height: 523px;\n }\n`;\n\nexport const ListBooks = styled.ul`\ndisplay:flex;\n flex-wrap:wrap; \ngap: 21px;\n\n@media only screen and (min-width: 768px) {\n    justify-content:space-between;\n    gap:27px 25px;\n}\n\n@media only screen and (min-width: 1440px) {\ngap: 27px 20px;\n}\n`","import { CardBook } from 'components/CardBook/CardBook';\nimport { ListBooks, WrapperListBooks } from './BookList.styled';\n\nexport const BooksList = ({ books }) => {\n  return (\n    <WrapperListBooks>\n      <ListBooks>\n        {books.map((book) => (\n          <CardBook key={book.imageUrl} book={book} />\n        ))}\n      </ListBooks>\n    </WrapperListBooks>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const WrapperRecommendedBooks = styled.section`\n  position: relative;\n  padding: 40px 20px;\n  margin-bottom: 20px;\n  border-radius: 30px;\n  width: 100%;\n  height: 382px;\n  background: ${({ theme }) => theme.colors.secondaryBgColor};\n\n  @media only screen and (max-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    padding: 40px;\n    margin-bottom: 0;\n    width: 704px;\n    height: 663px;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 100%;\n    height: 651px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 34px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  color: ${({ theme }) => theme.colors.mainTxtColor};\n\n  @media only screen and (min-width: 768px) {\n    font-size: 28px;\n    line-height: 1.14286;\n    margin-bottom: 28px;\n  }\n`;\nexport const WrapperButton = styled.div`\n  position: absolute;\n  top: 40px;\n  right: 20px;\n  display: flex;\n  gap: 8px;\n  @media only screen and (min-width: 768px) {\n    right: 40px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background-color: inherit;\n  border: 1px solid ${({ theme }) => theme.colors.border};\n\n  @media only screen and (min-width: 768px) {\n    width: 40px;\n    height: 40px;\n  }\n`;\n","import { BooksList } from \"components/BooksList/BooksList\"\nimport { Icon } from \"components/Icon\"\n\nimport { Button, Title, WrapperButton, WrapperRecommendedBooks } from \"./RecommendedBooks.styled\"\n\n\nexport const RecommendedBooks = ({books}) => {\n    \n    return (\n        <WrapperRecommendedBooks>\n            <Title>Recommended</Title>\n            \n            <WrapperButton>\n               <Button><Icon name=\"chevron-left\" stroke =\"#F9F9F9\"/></Button>\n                <Button><Icon name=\"chevron-right\" stroke=\"#F9F9F9\"/></Button>\n                </WrapperButton>\n            <BooksList books={books} />\n                \n    </WrapperRecommendedBooks>)\n}","import { styled } from 'styled-components';\n\nexport const WrapperDashboard = styled.aside`\n  padding: 20px;\n  margin-bottom: 10px;\n  border-radius: 30px;\n  width: 100%;\n  height: 478px;\n  background-color: ${({ theme }) => theme.colors.secondaryBgColor};\n\n  @media only screen and (max-width: 375px) {\n    width: 335px;\n    \n  }\n\n  @media only screen and (min-width: 768px) {\n    padding: 32px;\n    margin-bottom: 16px;\n    display: flex;\n    gap: 32px;\n    width: 704px;\n    height: 336px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    padding: 40px 20px 20px 20px;\n    flex-direction: column;\n    gap: 20px;\n    width: 353px;\n    height: 651px;\n  }\n`;\n","import { WrapperDashboard } from \"./Dashboard.styled\";\n\n\nexport const Dashboard = ({children}) => {\n  return <WrapperDashboard>{children}</WrapperDashboard>;\n};\n\n\n","import * as Yup from 'yup';\n\nexport const FiltersSchema = Yup.object().shape({\n  bookTitle: Yup.string()\n    .required('This field is required'),\n  author: Yup.string()\n    .required('This field is required'),\n});","import { Field, Form } from \"formik\";\nimport { styled } from \"styled-components\";\n\nexport const FiltersWrapper = styled.div`\ndisplay:flex:flex-direction:column;\n`\n\nexport const FiltersTitle = styled.h4`\nmargin-bottom:8px;\nfont-weight: 500;\nfont-size: 10px;\nline-height: 1.2;\nletter-spacing: -0.02em;\ncolor: ${({ theme }) => theme.colors.mainTxtColor};\n\n@media only screen and (min-width: 768px) {\n   \nfont-size: 14px;\nline-height: 1.28571;\n\n}\n`\n\nexport const FormFilters = styled(Form)`\nmargin-bottom:20px;\ndisplay:flex;\nflex-direction:column;\ngap:8px;\n`\n\nexport const FieldFilters = styled(Field)`\nborder-radius: 12px;\npadding: 14px 14px 14px 77px;\nwidth:100%;\nheight: 44px;\nbackground-color: ${({ theme }) => theme.colors.backgroundInput};\n  border: transparent;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.33333;\n  letter-spacing: -0.02em;\n  color: ${({ theme }) => theme.colors.mainTxtColor};\n  outline: none;\n  transition: border-color ${({ theme }) => theme.animation.transition};\n\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.colors.hoverInput};\n  }\n\n  @media only screen and (man-width: 375px) {\nwidth: 295px;\n  }\n\n  @media only screen and (min-width: 768px) {\n\nheight: 50px;\npadding: 16px 16px 16px 86px;\nfont-size: 14px;\nline-height: 1.28571;\n}\n\n@media only screen and (min-width: 1440px) {\n    width:313px;\n}\n`\n\nexport const ButtonFilters = styled.button`\nmargin-top:12px;\nborder: 1px solid ${({theme})=>theme.colors.border};\nborder-radius: 30px;\npadding: 10px 20px;\nwidth: 98px;\nheight: 38px;\nbackground-color:${({theme})=>theme.colors.primaryBgColor};\nfont-weight: 700;\nfont-size: 14px;\nline-height: 1.28571;\nletter-spacing: 0.02em;\ncolor: ${({ theme }) => theme.colors.mainTxtColor};\nwhite-space:nowrap;\n transition: background-color ${({ theme }) => theme.animation.transition};\n       /* color ${({ theme }) => theme.animation.transition} ;\n       border-color\n      ${({ theme }) => theme.animation.transition};  */\n\n    &:hover,\n    &:focus {\n      background-color: ${({ theme }) => theme.colors.backgroundButton};\n      color: ${({ theme }) => theme.colors.colorTxtButton};\n      border: transparent;\n    }\n\n    @media only screen and (min-width: 768px) {\npadding: 12px 28px;\nwidth: 122px;\nheight: 42px;\nfont-size: 16px;\nline-height: 1.125;\n\n    }\n  \n`\n\n","import { Formik } from \"formik\"\nimport { FiltersSchema } from \"schemas/FiltersSchema\"\nimport { ButtonFilters, FieldFilters, FiltersTitle, FiltersWrapper, FormFilters } from \"./Filters.styled\"\n\n\nexport const Filters = () => {\n    return (<FiltersWrapper>\n        <FiltersTitle>Filters:</FiltersTitle>\n        <Formik\n        initialValues={{\n        bookTitle: '',\n        author: '',\n            }}\n     validationSchema={FiltersSchema}\n      onSubmit={ (values) => {\n       console.log(values)\n      }}>\n        <FormFilters>\n            <FieldFilters id=\"bookTitle\" name=\"bookTitle\" placeholder=\"Enter text\"/>\n            <FieldFilters id=\"author\" name=\"author\" placeholder=\"Enter text\"/>\n            <ButtonFilters type=\"submit\">To apply</ButtonFilters>\n            </FormFilters>\n            </Formik>\n        \n    </FiltersWrapper>)\n}","import { Link } from \"react-router-dom\";\nimport { styled } from \"styled-components\";\n\nexport const WrapperLibrary = styled.div`\npadding:20px;\nborder-radius: 12px;\nwidth: 100%;\nheight: 244px;\nbackground-color:${({ theme }) => theme.colors.backgroundModalContent};\n\n@media only screen and (max-width: 375px) {\n    width: 295px;\n}\n\n@media only screen and (min-width: 768px) {\n    width: 313px;\n    height: 272px;\n}\n`\n\nexport const Subtitle = styled.h3`\nmargin-bottom:20px;\nfont-weight: 700;\nfont-size: 18px;\nline-height: 1;\nletter-spacing: -0.02em;\ncolor:${({ theme }) => theme.colors.mainTxtColor};\n\n@media only screen and (min-width: 768px) {\n    margin-bottom:40px;\n    font-size: 20px;\n}\n\n`\nexport const StyledItem = styled.li`\nwidth: 253px;\nheight: 54px;\nmargin-bottom:20px;\n\n`\n\n\nexport const WrapperItem = styled.div`\ndisplay: flex;\ngap:12px;\n\n`\n\nexport const WrapperRound = styled.div`\npadding:11px 16px;\nwidth: 40px;\nheight: 40px;\nborder-radius:50%;\nbackground-color:${({ theme }) => theme.colors.mainTxtColor};\n\nfont-weight: 700;\nfont-size: 18px;\nline-height: 1;\nletter-spacing: -0.02em;\ntext-align: center;\ncolor: ${({theme})=>theme.colors.colorTxtButton};\n`\nexport const TextLibrary = styled.p`\nfont-weight: 500;\nfont-size: 14px;\nline-height: 1.28571;\nletter-spacing: -0.02em;\ncolor: ${({theme})=>theme.colors.mainTxtColor};\n`\nexport const SpanLibrary = styled.span`\nfont-weight: 500;\nfont-size: 14px;\nline-height: 1.28571;\ncolor: ${({theme})=>theme.colors.darkTxtColor};\n`\nexport const StyledLink = styled(Link)`\nfont-weight: 500;\nfont-size: 14px;\nline-height: 1.28571;\nletter-spacing: -0.02em;\ntext-decoration: underline;\ntext-decoration-skip-ink: none;\ncolor:${({ theme }) => theme.colors.darkTxtColor};\n transition: color ${({ theme }) => theme.animation.transition};\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.backgroundButton};\n  }\n`\n\nexport const WrapperLink = styled.div`\ndisplay:flex;\njustify-content:space-between;\n\n@media only screen and (min-width: 768px) {\n    margin-top:6px;\n}\n`\n\nexport const WrapperQuot = styled.div`\ndisplay:none;\n\n@media only screen and (min-width: 1440px) {\n    padding:15px 20px;\n    display:flex;\n    gap:14px;\nborder-radius: 12px;\nwidth: 313px;\nheight: 83px;\nbackground-color:${({theme})=>theme.colors.backgroundModalContent};\n}\n`\n\nexport const StyledQuot = styled.p`\nfont-weight: 500;\nfont-size: 14px;\nline-height: 1.28571;\nletter-spacing: -0.02em;\ncolor:${({ theme }) => theme.colors.darkTxtColor};\n`\nexport const StyledSpan = styled.span`\nfont-weight: 500;\nfont-size: 14px;\nline-height: 1.28571;\nletter-spacing: -0.02em;\ncolor:${({ theme }) => theme.colors.mainTxtColor};\n`\n\n","import { Icon } from 'components/Icon';\nimport {\n  SpanLibrary,\n  StyledItem,\n  StyledLink,\n  StyledQuot,\n  StyledSpan,\n  Subtitle,\n  TextLibrary,\n  WrapperItem,\n  WrapperLibrary,\n  WrapperLink,\n  WrapperQuot,\n  WrapperRound,\n} from './MyLibrary.styled';\nimport books from '../../img/📚.png';\n\nexport const MyLibrary = () => {\n  return (\n    <>\n      <WrapperLibrary>\n        <Subtitle>Start your workout</Subtitle>\n        <ul>\n          <StyledItem>\n            <WrapperItem>\n              <WrapperRound>1</WrapperRound>\n              <TextLibrary>\n                Create a personal library:\n                <SpanLibrary>\n                  {' '}\n                  add the books you intend to read to it.\n                </SpanLibrary>\n              </TextLibrary>\n            </WrapperItem>\n          </StyledItem>\n          <StyledItem>\n            <WrapperItem>\n              <WrapperRound>2</WrapperRound>\n              <TextLibrary>\n                Create your first workout:{' '}\n                <SpanLibrary>\n                  define a goal, choose a period, start training.\n                </SpanLibrary>\n              </TextLibrary>\n            </WrapperItem>\n          </StyledItem>\n        </ul>\n        <WrapperLink>\n          <StyledLink>My library</StyledLink>\n          <Icon name=\"log-in\" stroke=\"#F9F9F9\" width=\"24px\" height=\"24px\" />\n        </WrapperLink>\n      </WrapperLibrary>\n      <WrapperQuot>\n        <img src={books} alt=\"books\" width=\"40px\" height=\"40px\"/>\n        <StyledQuot>\n          \"Books are <StyledSpan>windows</StyledSpan> to the world, and reading is a journey into the\n          unknown.\"\n        </StyledQuot>\n      </WrapperQuot>\n    </>\n  );\n};\n","import { Dashboard } from \"components/Dashboard/Dashboard\"\nimport { Filters } from \"components/Filters/Filters\"\nimport { MyLibrary } from \"components/MyLibrary/MyLibrary\"\n\nexport const RecommendedPageDashboard = () => {\n    return (<Dashboard>\n        <Filters />\n        <MyLibrary/>\n    </Dashboard>)\n}","export const selectBooks = state => state.books.books;\nexport const selectIsLoading = state => state.books.isLoading;\nexport const selectError = state => state.books.error;","import { styled } from 'styled-components';\n\nexport const StyledMain = styled.main`\n  background-color: ${({ theme }) => theme.colors.primaryBgColor};\n\n  @media only screen and (min-width: 1440px) {\n    display: flex;\n    gap: 16px;\n  }\n`;\n","import { RecommendedBooks } from \"components/RecommendedBooks/RecommendedBooks\";\nimport { RecommendedPageDashboard } from \"components/RecommendedPageDashboard/RecommendedPageDashboard\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getRecommendedBooks } from \"../../redux/books/operations\";\nimport { selectBooks } from \"../../redux/books/selectors\";\nimport { StyledMain } from \"./RecommendedPage.styled\";\n\nexport default function RecommendedPage() {\n    const dispatch = useDispatch();\n    const books = useSelector(selectBooks);\n    console.log(books);\n\n    useEffect(() => {\n        dispatch(getRecommendedBooks())\n    }, [dispatch]);\n    return (\n        <StyledMain>\n        <RecommendedPageDashboard />\n            <RecommendedBooks books={books} />\n        </StyledMain>\n    )\n}"],"names":["BooksItem","styled","_templateObject","_taggedTemplateLiteral","StyledImg","_templateObject2","TitleBook","_templateObject3","_ref","theme","colors","mainTxtColor","AuthorBook","_templateObject4","_ref2","darkTxtColor","CardBook","book","imageUrl","title","author","_jsxs","children","_jsx","src","alt","WrapperListBooks","ListBooks","BooksList","books","map","WrapperRecommendedBooks","secondaryBgColor","Title","WrapperButton","Button","_ref3","border","RecommendedBooks","Icon","name","stroke","WrapperDashboard","Dashboard","FiltersSchema","Yup","shape","bookTitle","required","FiltersWrapper","FiltersTitle","FormFilters","Form","FieldFilters","Field","backgroundInput","_ref4","animation","transition","_ref5","hoverInput","ButtonFilters","_templateObject5","_ref6","_ref7","primaryBgColor","_ref8","_ref9","_ref10","_ref11","_ref12","backgroundButton","_ref13","colorTxtButton","Filters","Formik","initialValues","validationSchema","onSubmit","values","console","log","id","placeholder","type","WrapperLibrary","backgroundModalContent","Subtitle","StyledItem","WrapperItem","WrapperRound","TextLibrary","_templateObject6","SpanLibrary","_templateObject7","StyledLink","Link","_templateObject8","WrapperLink","_templateObject9","WrapperQuot","_templateObject10","StyledQuot","_templateObject11","StyledSpan","_templateObject12","MyLibrary","_Fragment","width","height","RecommendedPageDashboard","selectBooks","state","StyledMain","RecommendedPage","dispatch","useDispatch","useSelector","useEffect","getRecommendedBooks"],"sourceRoot":""}
{"version":3,"file":"static/js/233.639c99b4.chunk.js","mappings":"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","sources":["components/Forms/Forms.styled.js","components/LogoForm/LogoForm.styled.js","components/LogoForm/LogoForm.jsx","schemas/RegisterSchema.js","components/Forms/RegisterForm.jsx","pages/RegisterPage/RegisterPage.js","pages/RegisterPage/RegisterPage.styled.js"],"sourcesContent":["import { ErrorMessage, Field, Form } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  @media only screen and (min-width: 768px) {\n    gap: 14px;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  border-radius: 12px;\n  padding: 14px 14px 14px 59px;\n  width: 100%;\n\n  background-color: ${({ theme }) => theme.colors.backgroundInput};\n  border: transparent;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.33333;\n  letter-spacing: -0.02em;\n  color: ${({ theme }) => theme.colors.mainTxtColor};\n  outline: none;\n  transition: border-color ${({ theme }) => theme.animation.transition};\n\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.colors.hoverInput};\n  }\n\n  @media only screen and (min-width: 768px) {\n    padding: 16px 16px 16px 65px;\n  }\n`;\n\nexport const StyledIcon = styled.i`\n  position: absolute;\n  top: 50%;\n  right: 7%;\n  width: 18px;\n  height: 18px;\n\n  @media only screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.33333;\n  letter-spacing: -0.02em;\n  color: ${({ theme }) => theme.colors.darkTxtColor};\n`;\n\nexport const ButtonForm = styled.button`\n  border-radius: 30px;\n  padding: 12px 29px;\n  width: 140px;\n  height: 42px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.backgroundButton};\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.28571;\n  letter-spacing: 0.02em;\n  color: ${({ theme }) => theme.colors.colorTxtButton};\n  transition: background-color ${({ theme }) => theme.animation.transition}\n    color ${({ theme }) => theme.animation.transition} border-color\n    ${({ theme }) => theme.animation.transition};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.colors.primaryBgColor};\n    color: ${({ theme }) => theme.colors.mainTxtColor};\n    border: 1px solid ${({ theme }) => theme.colors.border};\n  }\n\n  @media only screen and (min-width: 768px) {\n    padding: 16px 54px;\n    width: 225px;\n    height: 52px;\n    font-size: 20px;\n    line-height: 1;\n  }\n`;\nexport const WrapperButtonLink = styled.div`\n  margin-top: 14px;\n  display: flex;\n  align-items: center;\n \n  gap: 14px;\n\n  @media only screen and (min-width: 768px) {\n    margin-top: 68px;\n    gap: 20px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.16667;\n  letter-spacing: -0.02em;\n  text-decoration: underline;\n  text-decoration-skip-ink: none;\n  color: ${({ theme }) => theme.colors.darkTxtColor};\n  transition: color ${({ theme }) => theme.animation.transition};\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.backgroundButton};\n  }\n  @media only screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.28571;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 15px;\n  right: 8px;\n  font-size: 14px;\n  font-style: italic;\n  color: red;\n`;\n","import { styled } from 'styled-components';\n\nexport const WrapperIconForm = styled.div`\n  display:flex;\n  justify-content:center;\n  align-items:center;\n  width:45px;\n  height:20px;\n\n  @media only screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const StyledImgForm = styled.img`\n  display: none;\n\n  @media only screen and (min-width: 768px) {\n    display: block;\n    margin-bottom: 157px;\n  }\n`;\n","import { Icon } from 'components/Icon';\nimport logo from '../../img/Logo1x.webp';\nimport { StyledImgForm, WrapperIconForm } from './LogoForm.styled';\n\nexport const LogoForm = () => {\n  return (\n    <>\n      <WrapperIconForm>\n        <Icon name=\"Logo\" width=\"42px\" height=\"17px\" fill=\"#F9F9F9\" />\n      </WrapperIconForm>\n      <StyledImgForm src={logo} alt=\"logo\" />\n    </>\n  );\n};","import * as Yup from 'yup';\n\nexport const RegisterSchema = Yup.object().shape({\n  name: Yup.string().required('This field is required'),\n  email: Yup.string()\n    .email()\n    .matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/)\n    .required('This field is required'),\n  password: Yup.string()\n    .min(7, '7 chars minimum.')\n    .required('This field is required'),\n});\n","import { Formik } from 'formik';\nimport {\n  ButtonForm,\n  ErrMsg,\n  StyledField,\n  StyledForm,\n  StyledIcon,\n  StyledLabel,\n  StyledLink,\n  WrapperButtonLink,\n} from './Forms.styled';\nimport { Icon } from 'components/Icon';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport { RegisterSchema } from 'schemas/RegisterSchema';\n\n\nexport const RegisterForm = () => {\n  const [passwordShown, setPasswordShown] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    dispatch(register(values));\nactions.resetForm();\n  }\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={RegisterSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm autoComplete=\"off\">\n          <StyledLabel htmlFor=\"name\">\n            Name:\n            <StyledField\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Ilona Ratushnyak\"\n              autoComplete=\"off\"\n            />\n            <ErrMsg name=\"name\" component=\"p\" />\n          </StyledLabel>\n\n          <StyledLabel htmlFor=\"email\">\n            Mail:\n            <StyledField\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Your@email.com\"\n              autoComplete=\"off\"\n            />\n            <ErrMsg name=\"email\" component=\"p\" />\n          </StyledLabel>\n\n          <StyledLabel htmlFor=\"password\">\n            Password:\n            <StyledIcon\n              onClick={() => {\n                setPasswordShown(!passwordShown);\n              }}\n            >\n              {passwordShown ? (\n                <Icon name=\"eye\" stroke=\"#F9F9F9\" />\n              ) : (\n                <Icon name=\"eye-off\" stroke=\"#F9F9F9\" />\n              )}\n            </StyledIcon>\n            <StyledField\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Yourpasswordhere\"\n              type={passwordShown ? 'text' : 'password'}\n              autoComplete=\"off\"\n            />\n            <ErrMsg name=\"password\" component=\"p\" />\n          </StyledLabel>\n\n          <WrapperButtonLink>\n            <ButtonForm type=\"submit\">Registration</ButtonForm>\n            <StyledLink to=\"/login\">Already have an account?</StyledLink>\n          </WrapperButtonLink>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import { RegisterForm } from 'components/Forms/RegisterForm';\nimport mobile1x from '../../img/mobile1x.webp';\nimport mobile2x from '../../img/mobile2x.webp';\nimport desktop1x from '../../img/desktop1x.webp';\nimport desktop2x from '../../img/desktop2x.webp';\nimport {\n  StyledImg,\n  StyledSpan,\n  Title,\n  Wrapper,\n  WrapperPicture,\n} from './RegisterPage.styled';\nimport { LogoForm } from 'components/LogoForm/LogoForm';\n\nexport default function RegisterPage() {\n  return (\n    <>\n      <Wrapper>\n        <LogoForm />\n        <Title>\n          Expand your mind, reading <StyledSpan>a book</StyledSpan>\n        </Title>\n        <RegisterForm />\n      </Wrapper>\n      <WrapperPicture>\n        <picture>\n          <source\n            srcSet={`${mobile1x} 1x, ${mobile2x} 2x`}\n            media=\"(min-width: 375px)\"\n          />\n          <source\n            srcSet={`${desktop1x} 1x, ${desktop2x} 2x`}\n            media=\"(min-width: 1440px)\"\n          />\n          <StyledImg src={desktop1x} alt=\"mobile phone\" />\n        </picture>\n      </WrapperPicture>\n    </>\n  );\n}\n","import { styled } from 'styled-components';\n\nexport const Wrapper = styled.section`\n  margin-bottom: 10px;\n  padding: 20px;\n  border-radius: 30px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.secondaryBgColor};\n\n  @media only screen and (min-width: 768px) {\n    padding: 40px 64px 214px 64px;\n    margin-bottom: 0px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    padding: 40px 64px;\n    width: 50%;\n    /* height:736px; */\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-top: 40px;\n  margin-bottom: 20px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n  letter-spacing: 0.02em;\n  color: ${({ theme }) => theme.colors.mainTxtColor};\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 40px;\n    width: 444px;\n    height: 180px;\n    font-size: 64px;\n    line-height: 0.9375;\n  }\n`;\n\nexport const StyledSpan = styled.span`\n  color: ${({ theme }) => theme.colors.accentColor};\n`;\n\nexport const WrapperPicture = styled.section`\n  padding: 20px 40px 0 40px;\n  border-radius: 30px;\n  width: 100%;\n  height: 351px;\n  background-color: ${({ theme }) => theme.colors.secondaryBgColor};\n\n  @media only screen and (min-width: 768px) {\n    display: none;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    display: block;\n    padding: 80px 97px 0 98px;\n    width: 50%;\n    height: 100vh;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  border-radius: 30px;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n\n  @media (min-width: 1440px) {\n    display: block;\n    height: 100%;\n  }\n`;\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledField","Field","_templateObject2","_ref","theme","colors","backgroundInput","_ref2","mainTxtColor","_ref3","animation","transition","_ref4","hoverInput","StyledIcon","_templateObject3","StyledLabel","_templateObject4","_ref5","darkTxtColor","ButtonForm","_templateObject5","_ref6","backgroundButton","_ref7","colorTxtButton","_ref8","_ref9","_ref10","_ref11","primaryBgColor","_ref12","_ref13","border","WrapperButtonLink","_templateObject6","StyledLink","Link","_templateObject7","_ref14","_ref15","_ref16","ErrMsg","ErrorMessage","_templateObject8","WrapperIconForm","StyledImgForm","LogoForm","_jsxs","_Fragment","children","_jsx","Icon","name","width","height","fill","src","logo","alt","RegisterSchema","Yup","shape","required","email","matches","password","min","RegisterForm","_useState","useState","_useState2","_slicedToArray","passwordShown","setPasswordShown","dispatch","useDispatch","Formik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","autoComplete","htmlFor","id","type","placeholder","component","onClick","stroke","to","RegisterPage","Wrapper","Title","StyledSpan","WrapperPicture","srcSet","concat","mobile1x","mobile2x","media","desktop1x","desktop2x","StyledImg","secondaryBgColor","accentColor"],"sourceRoot":""}
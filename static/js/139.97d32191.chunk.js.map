{"version":3,"file":"static/js/139.97d32191.chunk.js","mappings":"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","sources":["components/Forms/Forms.styled.js","components/LabelWithError/LabelWithError.styled.js","components/LabelWithError/LabelWithError.jsx","components/LogoForm/LogoForm.styled.js","components/LogoForm/LogoForm.jsx","schemas/LoginSchema.js","components/Forms/LoginForm.jsx","pages/LoginPage/LoginPage.js","pages/RegisterPage/RegisterPage.styled.js"],"sourcesContent":["import { ErrorMessage, Field, Form } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display:flex;\n  flex-direction:column;\n\n  @media only screen and (min-width: 768px) {\n  }\n`;\n\nexport const StyledIcon = styled.i`\n  position: absolute;\n  top: 45%;\n  transform: translateY(-50%);\n  right: 16px;\n  width: 18px;\n  height: 18px;\n  border: 0;\n\n  @media only screen and (min-width: 768px) {\n    top: 46%;\n    right: 18px;\n    width: 20px;\n    height: 20px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    top:50%;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  padding-left: 10px;\n  background-color: ${({ theme }) => theme.colors.backgroundInput};\n  border: transparent;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.33333;\n  letter-spacing: -0.02em;\n  color: ${({ theme }) => theme.colors.mainTxtColor};\n  outline: none;\n  transition: border-color ${({ theme }) => theme.animation.transition};\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.mainTxtColor};\n  }\n\n  @media only screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.28571;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 45px;\n  left: 14px;\n  z-index: 102;\n  font-weight: 500;\n  font-size: 10px;\n  line-height: 1.2;\n  letter-spacing: -0.02em;\n  color: ${({ theme }) => theme.colors.colorError};\n\n    @media only screen and (min-width: 768px) {\n      top: 50px;\n    }\n \n`;\n\nexport const ButtonForm = styled.button`\n  border-radius: 30px;\n  padding: 12px 29px;\n  width: 140px;\n  height: 42px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.backgroundButton};\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.28571;\n  letter-spacing: 0.02em;\n  color: ${({ theme }) => theme.colors.colorTxtButton};\n  transition: background-color ${({ theme }) => theme.animation.transition}\n    color ${({ theme }) => theme.animation.transition} border-color\n    ${({ theme }) => theme.animation.transition};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.colors.primaryBgColor};\n    color: ${({ theme }) => theme.colors.mainTxtColor};\n    border: 1px solid ${({ theme }) => theme.colors.border};\n  }\n\n  @media only screen and (min-width: 768px) {\n    padding: 16px 54px;\n    width: 225px;\n    height: 52px;\n    font-size: 20px;\n    line-height: 1;\n  }\n`;\nexport const WrapperButtonLink = styled.div`\n  margin-top: 12px;\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  @media only screen and (min-width: 768px) {\n    margin-top: 68px;\n    gap: 20px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.16667;\n  letter-spacing: -0.02em;\n  text-decoration: underline;\n  text-decoration-skip-ink: none;\n  color: ${({ theme }) => theme.colors.darkTxtColor};\n  transition: color ${({ theme }) => theme.animation.transition};\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.backgroundButton};\n  }\n  @media only screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.28571;\n  }\n`;\n\n\n\n\n","import { styled } from 'styled-components';\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  display: flex;\n  margin-bottom: 8px;\n  border-radius: 12px;\n  padding: 14px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundInput};\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.33333;\n  letter-spacing: -0.02em;\n  color: ${({ theme }) => theme.colors.darkTxtColor};\n  transition: border-color ${({ theme }) => theme.animation.transition};\n\n  &.error {\n    border: 1px solid ${({ theme }) => theme.colors.colorError};\n  }\n\n  &.success {\n    border: 1px solid ${({ theme }) => theme.colors.colorValidate};\n  }\n\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.colors.hoverInput};\n  }\n\n  @media only screen and (min-width: 768px) {\n    padding: 16px;\n    margin-bottom: 14px;\n    width: 472px;\n    height: 50px;\n    font-size: 14px;\n    line-height: 1.28571;\n  }\n`;\n\nexport const StyledIconError = styled.i`\n  position: absolute;\n  top: 35%;\n  right: 13px;\n  width: 18px;\n  height: 18px;\n\n  @media only screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const StyledIconSuccess = styled.i`\n  position: absolute;\n  top: 35%;\n  right: 13px;\n  width: 18px;\n  height: 18px;\n\n  @media only screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const SuccessMessage = styled.div`\n  position: absolute;\n  top: 45px;\n  left: 14px;\n  z-index: 102;\n  font-weight: 500;\n  font-size: 10px;\n  line-height: 1.2;\n  letter-spacing: -0.02em;\n  color: ${({ theme }) => theme.colors.colorValidate};\n`;\n","import { useField } from 'formik';\nimport {\n  StyledIconError,\n  StyledIconSuccess,\n  StyledLabel,\n  SuccessMessage,\n} from './LabelWithError.styled';\nimport { Icon } from 'components/Icon';\n\nexport const LabelWithError = ({ name, children }) => {\n  const [, meta] = useField(name);\n  const isSuccess = meta.touched && !meta.error;\n  const isError = meta.touched && meta.error;\n  return (\n    <StyledLabel className={isError ? 'error' : isSuccess ? 'success' : ''}>\n      {children}\n      {isError && (\n        <StyledIconError>\n          <Icon name=\"pajamas_error\" stroke=\"#e90516\" />\n        </StyledIconError>\n      )}\n      {isSuccess && (\n        <>\n          <StyledIconSuccess>\n            <Icon name=\"gg_check-o\" stroke=\"#30b94d\" />\n          </StyledIconSuccess>\n          <SuccessMessage>{name} is secure</SuccessMessage>\n        </>\n      )}\n    </StyledLabel>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const WrapperIconForm = styled.div`\n  display:flex;\n  justify-content:center;\n  align-items:center;\n  width:45px;\n  height:20px;\n\n  @media only screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const StyledImgForm = styled.img`\n  display: none;\n\n  @media only screen and (min-width: 768px) {\n    display: block;\n    margin-bottom: 157px;\n  }\n\n   @media only screen and (min-width: 768px) {\n    margin-bottom: 107px;\n   }\n`;\n","import { Icon } from 'components/Icon';\nimport logo from '../../img/Logo1x.webp';\nimport { StyledImgForm, WrapperIconForm } from './LogoForm.styled';\n\nexport const LogoForm = () => {\n  return (\n    <>\n      <WrapperIconForm>\n        <Icon name=\"Logo\" width=\"42px\" height=\"17px\" fill=\"#F9F9F9\" />\n      </WrapperIconForm>\n      <StyledImgForm src={logo} alt=\"logo\" />\n    </>\n  );\n};","import * as Yup from 'yup';\n\nexport const LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email()\n    .matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/)\n    .required('This field is required'),\n  password: Yup.string()\n    .min(7, '7 chars minimum.')\n    .required('This field is required'),\n});","import { Formik } from 'formik';\nimport {\n  ButtonForm,\n  ErrMsg,\n  StyledField,\n  StyledForm,\n  StyledIcon,\n  StyledLink,\n  WrapperButtonLink,\n} from './Forms.styled';\nimport { Icon } from 'components/Icon';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { LoginSchema } from 'schemas/LoginSchema';\nimport { login } from '../../redux/auth/operations';\nimport { LabelWithError } from 'components/LabelWithError/LabelWithError';\n\nexport const LoginForm = () => {\n  const [passwordShown, setPasswordShown] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    dispatch(login(values));\n    actions.resetForm();\n  };\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validationSchema={LoginSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm autoComplete=\"off\">\n          <LabelWithError name=\"email\">\n            Mail:\n            <StyledField\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Your@email.com\"\n              autoComplete=\"off\"\n            />\n            <ErrMsg name=\"email\" component=\"div\" />\n          </LabelWithError>\n\n          <LabelWithError name=\"password\">\n            Password:\n            <StyledIcon\n              onClick={() => {\n                setPasswordShown(!passwordShown);\n              }}\n            >\n              {passwordShown ? (\n                <Icon name=\"eye\" stroke=\"#F9F9F9\" />\n              ) : (\n                <Icon name=\"eye-off\" stroke=\"#F9F9F9\" />\n              )}\n            </StyledIcon>\n            <StyledField\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Yourpasswordhere\"\n              type={passwordShown ? 'text' : 'password'}\n              autoComplete=\"off\"\n            />\n            <ErrMsg name=\"password\" component=\"p\" />\n          </LabelWithError>\n\n          <WrapperButtonLink>\n            <ButtonForm type=\"submit\">Log In</ButtonForm>\n            <StyledLink to=\"/register\">Don`t have an account?</StyledLink>\n          </WrapperButtonLink>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import { LoginForm } from 'components/Forms/LoginForm';\nimport {\n  StyledImg,\n  StyledSection,\n  StyledSpan,\n  Title,\n  Wrapper,\n  WrapperPicture,\n} from 'pages/RegisterPage/RegisterPage.styled';\nimport mobile1x from '../../img/mobile1x.webp';\nimport mobile2x from '../../img/mobile2x.webp';\nimport desktop1x from '../../img/desktop1x.webp';\nimport desktop2x from '../../img/desktop2x.webp';\nimport { LogoForm } from 'components/LogoForm/LogoForm';\n\nexport default function LoginPage() {\n  return (\n    <StyledSection>\n      <Wrapper>\n        <LogoForm />\n        <Title>\n          Expand your mind, reading <StyledSpan>a book</StyledSpan>\n        </Title>\n        <LoginForm />\n      </Wrapper>\n      <WrapperPicture>\n        <picture>\n          <source\n            srcSet={`${mobile1x} 1x, ${mobile2x} 2x`}\n            media=\"(min-width: 375px)\"\n          />\n          <source\n            srcSet={`${desktop1x} 1x, ${desktop2x} 2x`}\n            media=\"(min-width: 1440px)\"\n          />\n          <StyledImg src={desktop1x} alt=\"mobile phone\" />\n        </picture>\n      </WrapperPicture>\n    </StyledSection>\n  );\n}\n","import { styled } from 'styled-components';\n\nexport const StyledSection = styled.section`\n  background-color: ${({ theme }) => theme.colors.primaryBgColor};\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  @media only screen and (min-width: 768px) {\n    padding: 32px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    flex-direction: row;\n    gap: 16px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n  border-radius: 30px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.secondaryBgColor};\n\n  @media only screen and (min-width: 768px) {\n    padding: 40px 168px 214px 64px;\n    margin-bottom: 0px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    padding: 40px 64px;\n    width: 600px;\n    height: 736px;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-top: 40px;\n  margin-bottom: 20px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n  letter-spacing: 0.02em;\n  color: ${({ theme }) => theme.colors.mainTxtColor};\n\n  @media only screen and (min-width: 768px) {\n    margin-top: 0;\n    margin-bottom: 40px;\n    width: 444px;\n    height: 180px;\n    font-size: 64px;\n    line-height: 0.9375;\n  }\n`;\n\nexport const StyledSpan = styled.span`\n  color: ${({ theme }) => theme.colors.accentColor};\n`;\n\nexport const WrapperPicture = styled.div`\n  padding: 20px 40px 0 40px;\n  border-radius: 30px;\n  width: 100%;\n  height: 351px;\n  background-color: ${({ theme }) => theme.colors.secondaryBgColor};\n  /* transition: opsity .4s ease-out .2s */\n\n  @media only screen and (min-width: 768px) {\n    display: none;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    display: block;\n    width: 600px;\n    height: 736px;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  border-radius: 30px;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n\n  @media (min-width: 1440px) {\n    display: block;\n    height: 100%;\n  }\n`;\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledIcon","_templateObject2","StyledField","Field","_templateObject3","_ref","theme","colors","backgroundInput","_ref2","mainTxtColor","_ref3","animation","transition","_ref4","ErrMsg","ErrorMessage","_templateObject4","_ref5","colorError","ButtonForm","_templateObject5","_ref6","backgroundButton","_ref7","colorTxtButton","_ref8","_ref9","_ref10","_ref11","primaryBgColor","_ref12","_ref13","border","WrapperButtonLink","_templateObject6","StyledLink","Link","_templateObject7","_ref14","darkTxtColor","_ref15","_ref16","StyledLabel","colorValidate","hoverInput","StyledIconError","StyledIconSuccess","SuccessMessage","LabelWithError","name","children","_useField","useField","meta","_slicedToArray","isSuccess","touched","error","isError","_jsxs","className","_jsx","Icon","stroke","_Fragment","WrapperIconForm","StyledImgForm","LogoForm","width","height","fill","src","logo","alt","LoginSchema","Yup","shape","email","matches","required","password","min","LoginForm","_useState","useState","_useState2","passwordShown","setPasswordShown","dispatch","useDispatch","Formik","initialValues","validationSchema","onSubmit","values","actions","login","resetForm","autoComplete","id","type","placeholder","component","onClick","to","LoginPage","StyledSection","Wrapper","Title","StyledSpan","WrapperPicture","srcSet","concat","mobile1x","mobile2x","media","desktop1x","desktop2x","StyledImg","secondaryBgColor","accentColor"],"sourceRoot":""}